ì
RF:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\BrasilAPI\BrasilApiRequest.cs
	namespace 	

SimpleJobs
 
. 
	BrasilAPI 
; 
public 
class 
BrasilApiRequest 
{ 
} ó
bF:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\BrasilAPI\ResponseEntity\BrasilApiResponse.cs
	namespace 	

SimpleJobs
 
. 
	BrasilAPI 
; 
public 
record 
BrasilApiResponse 
<  
TEntity  '
>' (
where) .
TEntity/ 6
:7 8
class9 >
{ 
public 

bool 
Success 
{ 
get 
; 
set "
;" #
}$ %
public 

required 
string 
Message "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 

TEntity 
? 
Content 
{ 
get !
;! "
set# &
;& '
}( )
} é§
]F:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\EntityFrameworkUtility\RepositoryBase.cs
	namespace 	

SimpleJobs
 
. "
EntityFrameworkUtility +
;+ ,
public 
class 
RepositoryBase 
< 
TEntity #
># $
($ %
	DbContext% .
	dbContext/ 8
)8 9
:: ;
IDisposable< G
whereH M
TEntityN U
:V W
classX ]
{ 
private 
readonly 
	DbContext 
_context '
=( )
	dbContext* 3
;3 4
~ 
RepositoryBase 
( 
) 
=> 
Dispose  
(  !
)! "
;" #
public 

void 
Dispose 
( 
) 
{ 
GC 

.
 
SuppressFinalize 
( 
this  
)  !
;! "
}   
public** 

void** 
Insert** 
(** 
TEntity** 
entity** %
)**% &
{++ 
_context,, 
.,, 
Set,, 
<,, 
TEntity,, 
>,, 
(,, 
),, 
.,,  
Add,,  #
(,,# $
entity,,$ *
),,* +
;,,+ ,
_context-- 
.-- 
SaveChanges-- 
(-- 
)-- 
;-- 
}.. 
public44 

void44 
BatchInsert44 
(44 
IEnumerable44 '
<44' (
TEntity44( /
>44/ 0
entities441 9
)449 :
{55 
_context66 
.66 
Set66 
<66 
TEntity66 
>66 
(66 
)66 
.66  
AddRange66  (
(66( )
entities66) 1
)661 2
;662 3
_context77 
.77 
SaveChanges77 
(77 
)77 
;77 
}88 
public>> 

void>> 
Update>> 
(>> 
TEntity>> 
entity>> %
)>>% &
{?? 
_context@@ 
.@@ 
Entry@@ 
(@@ 
entity@@ 
)@@ 
.@@ 
State@@ $
=@@% &
EntityState@@' 2
.@@2 3
Modified@@3 ;
;@@; <
_contextAA 
.AA 
SaveChangesAA 
(AA 
)AA 
;AA 
}BB 
publicHH 

voidHH 
BatchUpdateHH 
(HH 
IEnumerableHH '
<HH' (
TEntityHH( /
>HH/ 0
entitiesHH1 9
)HH9 :
{II 
foreachJJ 
(JJ 
TEntityJJ 
entityJJ 
inJJ  "
entitiesJJ# +
)JJ+ ,
{KK 	
_contextLL 
.LL 
EntryLL 
(LL 
entityLL !
)LL! "
.LL" #
StateLL# (
=LL) *
EntityStateLL+ 6
.LL6 7
ModifiedLL7 ?
;LL? @
_contextMM 
.MM 
SaveChangesMM  
(MM  !
)MM! "
;MM" #
}NN 	
}OO 
publicUU 

voidUU 

DeleteByIdUU 
(UU 
paramsUU !
objectUU" (
[UU( )
]UU) *
idUU+ -
)UU- .
{VV 
TEntityWW 
?WW 
objWW 
=WW 
_contextWW 
.WW  
SetWW  #
<WW# $
TEntityWW$ +
>WW+ ,
(WW, -
)WW- .
.WW. /
FindWW/ 3
(WW3 4
idWW4 6
)WW6 7
;WW7 8
ifXX 

(XX 
objXX 
!=XX 
nullXX 
)XX 
{YY 	
_contextZZ 
.ZZ 
EntryZZ 
(ZZ 
objZZ 
)ZZ 
.ZZ  
StateZZ  %
=ZZ& '
EntityStateZZ( 3
.ZZ3 4
DeletedZZ4 ;
;ZZ; <
_context[[ 
.[[ 
Set[[ 
<[[ 
TEntity[[  
>[[  !
([[! "
)[[" #
.[[# $
Remove[[$ *
([[* +
obj[[+ .
)[[. /
;[[/ 0
_context\\ 
.\\ 
SaveChanges\\  
(\\  !
)\\! "
;\\" #
}]] 	
}^^ 
publicdd 

voiddd 
Deletedd 
(dd 
TEntitydd 
entitydd %
)dd% &
{ee 
_contextff 
.ff 
Entryff 
(ff 
entityff 
)ff 
.ff 
Stateff $
=ff% &
EntityStateff' 2
.ff2 3
Deletedff3 :
;ff: ;
_contextgg 
.gg 
Setgg 
<gg 
TEntitygg 
>gg 
(gg 
)gg 
.gg  
Removegg  &
(gg& '
entitygg' -
)gg- .
;gg. /
_contexthh 
.hh 
SaveChangeshh 
(hh 
)hh 
;hh 
}ii 
publicoo 

voidoo 
BatchDeleteoo 
(oo 
IEnumerableoo '
<oo' (
TEntityoo( /
>oo/ 0
entitiesoo1 9
)oo9 :
{pp 
foreachqq 
(qq 
TEntityqq 
entityqq 
inqq  "
entitiesqq# +
)qq+ ,
{rr 	
_contextss 
.ss 
Entryss 
(ss 
entityss !
)ss! "
.ss" #
Statess# (
=ss) *
EntityStatess+ 6
.ss6 7
Deletedss7 >
;ss> ?
_contexttt 
.tt 
Settt 
<tt 
TEntitytt  
>tt  !
(tt! "
)tt" #
.tt# $
Removett$ *
(tt* +
entitytt+ 1
)tt1 2
;tt2 3
_contextuu 
.uu 
SaveChangesuu  
(uu  !
)uu! "
;uu" #
}vv 	
}ww 
public 

IEnumerable 
< 
TEntity 
> 
Search  &
(& '

Expression' 1
<1 2
Func2 6
<6 7
TEntity7 >
,> ?
bool@ D
>D E
>E F

expressionG Q
)Q R
{
ÄÄ 
return
ÅÅ 
_context
ÅÅ 
.
ÅÅ 
Set
ÅÅ 
<
ÅÅ 
TEntity
ÅÅ #
>
ÅÅ# $
(
ÅÅ$ %
)
ÅÅ% &
.
ÅÅ& '
Where
ÅÅ' ,
(
ÅÅ, -

expression
ÅÅ- 7
??
ÅÅ8 :
(
ÅÅ; <
x
ÅÅ< =
=>
ÅÅ> @
true
ÅÅA E
)
ÅÅE F
)
ÅÅF G
.
ÅÅG H
ToList
ÅÅH N
(
ÅÅN O
)
ÅÅO P
;
ÅÅP Q
}
ÇÇ 
public
ää 


IQueryable
ää 
<
ää 
TEntity
ää 
>
ää 
Query
ää $
(
ää$ %

Expression
ää% /
<
ää/ 0
Func
ää0 4
<
ää4 5
TEntity
ää5 <
,
ää< =
bool
ää> B
>
ääB C
>
ääC D

expression
ääE O
)
ääO P
{
ãã 
return
åå 
_context
åå 
.
åå 
Set
åå 
<
åå 
TEntity
åå #
>
åå# $
(
åå$ %
)
åå% &
.
åå& '
Where
åå' ,
(
åå, -

expression
åå- 7
??
åå8 :
(
åå; <
x
åå< =
=>
åå> @
true
ååA E
)
ååE F
)
ååF G
;
ååG H
}
çç 
public
ìì 

IEnumerable
ìì 
<
ìì 
TEntity
ìì 
>
ìì 
All
ìì  #
(
ìì# $
)
ìì$ %
{
îî 
return
ïï 
_context
ïï 
.
ïï 
Set
ïï 
<
ïï 
TEntity
ïï #
>
ïï# $
(
ïï$ %
)
ïï% &
.
ïï& '
ToList
ïï' -
(
ïï- .
)
ïï. /
;
ïï/ 0
}
ññ 
public
ùù 

TEntity
ùù 
?
ùù 
GetById
ùù 
(
ùù 
params
ùù "
object
ùù# )
[
ùù) *
]
ùù* +
id
ùù, .
)
ùù. /
{
ûû 
return
üü 
_context
üü 
.
üü 
Set
üü 
<
üü 
TEntity
üü #
>
üü# $
(
üü$ %
)
üü% &
.
üü& '
Find
üü' +
(
üü+ ,
id
üü, .
)
üü. /
;
üü/ 0
}
†† 
public
¶¶ 

TEntity
¶¶ 
?
¶¶ 
First
¶¶ 
(
¶¶ 
)
¶¶ 
{
ßß 
return
®® 
_context
®® 
.
®® 
Set
®® 
<
®® 
TEntity
®® #
>
®®# $
(
®®$ %
)
®®% &
.
®®& '
FirstOrDefault
®®' 5
(
®®5 6
)
®®6 7
;
®®7 8
}
©© 
public
±± 

TEntity
±± 
?
±± 
First
±± 
(
±± 

Expression
±± $
<
±±$ %
Func
±±% )
<
±±) *
TEntity
±±* 1
,
±±1 2
bool
±±3 7
>
±±7 8
>
±±8 9

expression
±±: D
)
±±D E
{
≤≤ 
return
≥≥ 
_context
≥≥ 
.
≥≥ 
Set
≥≥ 
<
≥≥ 
TEntity
≥≥ #
>
≥≥# $
(
≥≥$ %
)
≥≥% &
.
≥≥& '
FirstOrDefault
≥≥' 5
(
≥≥5 6

expression
≥≥6 @
??
≥≥A C
(
≥≥D E
x
≥≥E F
=>
≥≥G I
true
≥≥J N
)
≥≥N O
)
≥≥O P
;
≥≥P Q
}
¥¥ 
public
∫∫ 

TEntity
∫∫ 
?
∫∫ 
Last
∫∫ 
(
∫∫ 
)
∫∫ 
{
ªª 
return
ºº 
_context
ºº 
.
ºº 
Set
ºº 
<
ºº 
TEntity
ºº #
>
ºº# $
(
ºº$ %
)
ºº% &
.
ºº& '
LastOrDefault
ºº' 4
(
ºº4 5
)
ºº5 6
;
ºº6 7
}
ΩΩ 
public
≈≈ 

TEntity
≈≈ 
?
≈≈ 
Last
≈≈ 
(
≈≈ 

Expression
≈≈ #
<
≈≈# $
Func
≈≈$ (
<
≈≈( )
TEntity
≈≈) 0
,
≈≈0 1
bool
≈≈2 6
>
≈≈6 7
>
≈≈7 8

expression
≈≈9 C
)
≈≈C D
{
∆∆ 
return
«« 
_context
«« 
.
«« 
Set
«« 
<
«« 
TEntity
«« #
>
««# $
(
««$ %
)
««% &
.
««& '
LastOrDefault
««' 4
(
««4 5

expression
««5 ?
??
««@ B
(
««C D
x
««D E
=>
««F H
true
««I M
)
««M N
)
««N O
;
««O P
}
»» 
public
““ 

IEnumerable
““ 
<
““ 
TEntity
““ 
>
““ 
Some
““  $
(
““$ %

Expression
““% /
<
““/ 0
Func
““0 4
<
““4 5
TEntity
““5 <
,
““< =
bool
““> B
>
““B C
>
““C D

expression
““E O
,
““O P
int
““Q T
skip
““U Y
,
““Y Z
int
““[ ^
amount
““_ e
)
““e f
{
”” 
return
‘‘ 
_context
‘‘ 
.
‘‘ 
Set
‘‘ 
<
‘‘ 
TEntity
‘‘ #
>
‘‘# $
(
‘‘$ %
)
‘‘% &
.
‘‘& '
Where
‘‘' ,
(
‘‘, -

expression
‘‘- 7
??
‘‘8 :
(
‘‘; <
x
‘‘< =
=>
‘‘> @
true
‘‘A E
)
‘‘E F
)
‘‘F G
.
‘‘G H
Skip
‘‘H L
(
‘‘L M
skip
‘‘M Q
)
‘‘Q R
.
‘‘R S
Take
‘‘S W
(
‘‘W X
amount
‘‘X ^
)
‘‘^ _
.
‘‘_ `
ToList
‘‘` f
(
‘‘f g
)
‘‘g h
;
‘‘h i
}
’’ 
public
ﬁﬁ 

IEnumerable
ﬁﬁ 
<
ﬁﬁ 
TEntity
ﬁﬁ 
>
ﬁﬁ 
Skip
ﬁﬁ  $
(
ﬁﬁ$ %

Expression
ﬁﬁ% /
<
ﬁﬁ/ 0
Func
ﬁﬁ0 4
<
ﬁﬁ4 5
TEntity
ﬁﬁ5 <
,
ﬁﬁ< =
bool
ﬁﬁ> B
>
ﬁﬁB C
>
ﬁﬁC D

expression
ﬁﬁE O
,
ﬁﬁO P
int
ﬁﬁQ T
skip
ﬁﬁU Y
)
ﬁﬁY Z
{
ﬂﬂ 
return
‡‡ 
_context
‡‡ 
.
‡‡ 
Set
‡‡ 
<
‡‡ 
TEntity
‡‡ #
>
‡‡# $
(
‡‡$ %
)
‡‡% &
.
‡‡& '
Where
‡‡' ,
(
‡‡, -

expression
‡‡- 7
??
‡‡8 :
(
‡‡; <
x
‡‡< =
=>
‡‡> @
true
‡‡A E
)
‡‡E F
)
‡‡F G
.
‡‡G H
Skip
‡‡H L
(
‡‡L M
skip
‡‡M Q
)
‡‡Q R
.
‡‡R S
ToList
‡‡S Y
(
‡‡Y Z
)
‡‡Z [
;
‡‡[ \
}
·· 
public
ÍÍ 

IEnumerable
ÍÍ 
<
ÍÍ 
TEntity
ÍÍ 
>
ÍÍ 
Take
ÍÍ  $
(
ÍÍ$ %

Expression
ÍÍ% /
<
ÍÍ/ 0
Func
ÍÍ0 4
<
ÍÍ4 5
TEntity
ÍÍ5 <
,
ÍÍ< =
bool
ÍÍ> B
>
ÍÍB C
>
ÍÍC D

expression
ÍÍE O
,
ÍÍO P
int
ÍÍQ T
amount
ÍÍU [
)
ÍÍ[ \
{
ÎÎ 
return
ÏÏ 
_context
ÏÏ 
.
ÏÏ 
Set
ÏÏ 
<
ÏÏ 
TEntity
ÏÏ #
>
ÏÏ# $
(
ÏÏ$ %
)
ÏÏ% &
.
ÏÏ& '
Where
ÏÏ' ,
(
ÏÏ, -

expression
ÏÏ- 7
??
ÏÏ8 :
(
ÏÏ; <
x
ÏÏ< =
=>
ÏÏ> @
true
ÏÏA E
)
ÏÏE F
)
ÏÏF G
.
ÏÏG H
Take
ÏÏH L
(
ÏÏL M
amount
ÏÏM S
)
ÏÏS T
.
ÏÏT U
ToList
ÏÏU [
(
ÏÏ[ \
)
ÏÏ\ ]
;
ÏÏ] ^
}
ÌÌ 
public
ÛÛ 

int
ÛÛ 
Count
ÛÛ 
(
ÛÛ 
)
ÛÛ 
{
ÙÙ 
return
ıı 
_context
ıı 
.
ıı 
Set
ıı 
<
ıı 
TEntity
ıı #
>
ıı# $
(
ıı$ %
)
ıı% &
.
ıı& '
Count
ıı' ,
(
ıı, -
)
ıı- .
;
ıı. /
}
ˆˆ 
public
˛˛ 

int
˛˛ 
Count
˛˛ 
(
˛˛ 

Expression
˛˛ 
<
˛˛  
Func
˛˛  $
<
˛˛$ %
TEntity
˛˛% ,
,
˛˛, -
bool
˛˛. 2
>
˛˛2 3
>
˛˛3 4

expression
˛˛5 ?
)
˛˛? @
{
ˇˇ 
return
ÄÄ 
_context
ÄÄ 
.
ÄÄ 
Set
ÄÄ 
<
ÄÄ 
TEntity
ÄÄ #
>
ÄÄ# $
(
ÄÄ$ %
)
ÄÄ% &
.
ÄÄ& '
Count
ÄÄ' ,
(
ÄÄ, -

expression
ÄÄ- 7
??
ÄÄ8 :
(
ÄÄ; <
x
ÄÄ< =
=>
ÄÄ> @
true
ÄÄA E
)
ÄÄE F
)
ÄÄF G
;
ÄÄG H
}
ÅÅ 
public
ââ 

bool
ââ 
Exist
ââ 
(
ââ 

Expression
ââ  
<
ââ  !
Func
ââ! %
<
ââ% &
TEntity
ââ& -
,
ââ- .
bool
ââ/ 3
>
ââ3 4
>
ââ4 5

expression
ââ6 @
)
ââ@ A
{
ää 
var
ãã 
entity
ãã 
=
ãã 
_context
ãã 
.
ãã 
Set
ãã !
<
ãã! "
TEntity
ãã" )
>
ãã) *
(
ãã* +
)
ãã+ ,
.
ãã, -
FirstOrDefault
ãã- ;
(
ãã; <

expression
ãã< F
??
ããG I
(
ããJ K
x
ããK L
=>
ããM O
true
ããP T
)
ããT U
)
ããU V
;
ããV W
return
åå 
entity
åå 
!=
åå 
null
åå 
;
åå 
}
çç 
public
îî 

bool
îî 
Exist
îî 
(
îî 
params
îî 
object
îî #
[
îî# $
]
îî$ %
id
îî& (
)
îî( )
{
ïï 
var
ññ 
entity
ññ 
=
ññ 
_context
ññ 
.
ññ 
Set
ññ !
<
ññ! "
TEntity
ññ" )
>
ññ) *
(
ññ* +
)
ññ+ ,
.
ññ, -
Find
ññ- 1
(
ññ1 2
id
ññ2 4
)
ññ4 5
;
ññ5 6
return
óó 
entity
óó 
!=
óó 
null
óó 
;
óó 
}
òò 
public
†† 

bool
†† 
Any
†† 
(
†† 

Expression
†† 
<
†† 
Func
†† #
<
††# $
TEntity
††$ +
,
††+ ,
bool
††- 1
>
††1 2
>
††2 3

expression
††4 >
)
††> ?
{
°° 
return
¢¢ 
_context
¢¢ 
.
¢¢ 
Set
¢¢ 
<
¢¢ 
TEntity
¢¢ #
>
¢¢# $
(
¢¢$ %
)
¢¢% &
.
¢¢& '
Any
¢¢' *
(
¢¢* +

expression
¢¢+ 5
??
¢¢6 8
(
¢¢9 :
x
¢¢: ;
=>
¢¢< >
true
¢¢? C
)
¢¢C D
)
¢¢D E
;
¢¢E F
}
££ 
public
ÆÆ 

async
ÆÆ 
Task
ÆÆ 
InsertAsync
ÆÆ !
(
ÆÆ! "
TEntity
ÆÆ" )
entity
ÆÆ* 0
)
ÆÆ0 1
{
ØØ 
await
∞∞ 
_context
∞∞ 
.
∞∞ 
Set
∞∞ 
<
∞∞ 
TEntity
∞∞ "
>
∞∞" #
(
∞∞# $
)
∞∞$ %
.
∞∞% &
AddAsync
∞∞& .
(
∞∞. /
entity
∞∞/ 5
)
∞∞5 6
;
∞∞6 7
await
±± 
_context
±± 
.
±± 
SaveChangesAsync
±± '
(
±±' (
)
±±( )
;
±±) *
}
≤≤ 
public
ππ 

async
ππ 
Task
ππ 
BatchInsertAsync
ππ &
(
ππ& '
IEnumerable
ππ' 2
<
ππ2 3
TEntity
ππ3 :
>
ππ: ;
entities
ππ< D
)
ππD E
{
∫∫ 
await
ªª 
_context
ªª 
.
ªª 
Set
ªª 
<
ªª 
TEntity
ªª "
>
ªª" #
(
ªª# $
)
ªª$ %
.
ªª% &
AddRangeAsync
ªª& 3
(
ªª3 4
entities
ªª4 <
)
ªª< =
;
ªª= >
await
ºº 
_context
ºº 
.
ºº 
SaveChangesAsync
ºº '
(
ºº' (
)
ºº( )
;
ºº) *
}
ΩΩ 
public
ƒƒ 

async
ƒƒ 
Task
ƒƒ 
UpdateAsync
ƒƒ !
(
ƒƒ! "
TEntity
ƒƒ" )
entity
ƒƒ* 0
)
ƒƒ0 1
{
≈≈ 
_context
∆∆ 
.
∆∆ 
Entry
∆∆ 
(
∆∆ 
entity
∆∆ 
)
∆∆ 
.
∆∆ 
State
∆∆ $
=
∆∆% &
EntityState
∆∆' 2
.
∆∆2 3
Modified
∆∆3 ;
;
∆∆; <
await
«« 
_context
«« 
.
«« 
SaveChangesAsync
«« '
(
««' (
)
««( )
;
««) *
}
»» 
public
œœ 

async
œœ 
Task
œœ 
BatchUpdateAsync
œœ &
(
œœ& '
IEnumerable
œœ' 2
<
œœ2 3
TEntity
œœ3 :
>
œœ: ;
entities
œœ< D
)
œœD E
{
–– 
foreach
—— 
(
—— 
TEntity
—— 
entity
—— 
in
——  "
entities
——# +
)
——+ ,
{
““ 	
_context
”” 
.
”” 
Entry
”” 
(
”” 
entity
”” !
)
””! "
.
””" #
State
””# (
=
””) *
EntityState
””+ 6
.
””6 7
Modified
””7 ?
;
””? @
}
‘‘ 	
await
’’ 
_context
’’ 
.
’’ 
SaveChangesAsync
’’ '
(
’’' (
)
’’( )
;
’’) *
}
÷÷ 
public
›› 

async
›› 
Task
›› 
DeleteByIdAsync
›› %
(
››% &
params
››& ,
object
››- 3
[
››3 4
]
››4 5
id
››6 8
)
››8 9
{
ﬁﬁ 
TEntity
ﬂﬂ 
?
ﬂﬂ 
obj
ﬂﬂ 
=
ﬂﬂ 
await
ﬂﬂ 
_context
ﬂﬂ %
.
ﬂﬂ% &
Set
ﬂﬂ& )
<
ﬂﬂ) *
TEntity
ﬂﬂ* 1
>
ﬂﬂ1 2
(
ﬂﬂ2 3
)
ﬂﬂ3 4
.
ﬂﬂ4 5
	FindAsync
ﬂﬂ5 >
(
ﬂﬂ> ?
id
ﬂﬂ? A
)
ﬂﬂA B
;
ﬂﬂB C
if
‡‡ 

(
‡‡ 
obj
‡‡ 
!=
‡‡ 
null
‡‡ 
)
‡‡ 
{
·· 	
_context
‚‚ 
.
‚‚ 
Entry
‚‚ 
(
‚‚ 
obj
‚‚ 
)
‚‚ 
.
‚‚  
State
‚‚  %
=
‚‚& '
EntityState
‚‚( 3
.
‚‚3 4
Deleted
‚‚4 ;
;
‚‚; <
_context
„„ 
.
„„ 
Set
„„ 
<
„„ 
TEntity
„„  
>
„„  !
(
„„! "
)
„„" #
.
„„# $
Remove
„„$ *
(
„„* +
obj
„„+ .
)
„„. /
;
„„/ 0
await
‰‰ 
_context
‰‰ 
.
‰‰ 
SaveChangesAsync
‰‰ +
(
‰‰+ ,
)
‰‰, -
;
‰‰- .
}
ÂÂ 	
}
ÊÊ 
public
ÌÌ 

async
ÌÌ 
Task
ÌÌ 
DeleteAsync
ÌÌ !
(
ÌÌ! "
TEntity
ÌÌ" )
entity
ÌÌ* 0
)
ÌÌ0 1
{
ÓÓ 
_context
ÔÔ 
.
ÔÔ 
Entry
ÔÔ 
(
ÔÔ 
entity
ÔÔ 
)
ÔÔ 
.
ÔÔ 
State
ÔÔ $
=
ÔÔ% &
EntityState
ÔÔ' 2
.
ÔÔ2 3
Deleted
ÔÔ3 :
;
ÔÔ: ;
_context
 
.
 
Set
 
<
 
TEntity
 
>
 
(
 
)
 
.
  
Remove
  &
(
& '
entity
' -
)
- .
;
. /
await
ÒÒ 
_context
ÒÒ 
.
ÒÒ 
SaveChangesAsync
ÒÒ '
(
ÒÒ' (
)
ÒÒ( )
;
ÒÒ) *
}
ÚÚ 
public
˘˘ 

async
˘˘ 
Task
˘˘ 
BatchDeleteAsync
˘˘ &
(
˘˘& '
IEnumerable
˘˘' 2
<
˘˘2 3
TEntity
˘˘3 :
>
˘˘: ;
entities
˘˘< D
)
˘˘D E
{
˙˙ 
foreach
˚˚ 
(
˚˚ 
TEntity
˚˚ 
entity
˚˚ 
in
˚˚  "
entities
˚˚# +
)
˚˚+ ,
{
¸¸ 	
_context
˝˝ 
.
˝˝ 
Entry
˝˝ 
(
˝˝ 
entity
˝˝ !
)
˝˝! "
.
˝˝" #
State
˝˝# (
=
˝˝) *
EntityState
˝˝+ 6
.
˝˝6 7
Deleted
˝˝7 >
;
˝˝> ?
_context
˛˛ 
.
˛˛ 
Set
˛˛ 
<
˛˛ 
TEntity
˛˛  
>
˛˛  !
(
˛˛! "
)
˛˛" #
.
˛˛# $
Remove
˛˛$ *
(
˛˛* +
entity
˛˛+ 1
)
˛˛1 2
;
˛˛2 3
}
ˇˇ 	
await
ÄÄ 
_context
ÄÄ 
.
ÄÄ 
SaveChangesAsync
ÄÄ '
(
ÄÄ' (
)
ÄÄ( )
;
ÄÄ) *
}
ÅÅ 
public
ää 

async
ää 
Task
ää 
<
ää 
IEnumerable
ää !
<
ää! "
TEntity
ää" )
>
ää) *
>
ää* +
SearchAsync
ää, 7
(
ää7 8

Expression
ää8 B
<
ääB C
Func
ääC G
<
ääG H
TEntity
ääH O
,
ääO P
bool
ääQ U
>
ääU V
>
ääV W

expression
ääX b
)
ääb c
{
ãã 
return
åå 
await
åå 
_context
åå 
.
åå 
Set
åå !
<
åå! "
TEntity
åå" )
>
åå) *
(
åå* +
)
åå+ ,
.
åå, -
Where
åå- 2
(
åå2 3

expression
åå3 =
??
åå> @
(
ååA B
x
ååB C
=>
ååD F
true
ååG K
)
ååK L
)
ååL M
.
ååM N
ToListAsync
ååN Y
(
ååY Z
)
ååZ [
;
åå[ \
}
çç 
public
ññ 

async
ññ 
Task
ññ 
<
ññ 

IQueryable
ññ  
<
ññ  !
TEntity
ññ! (
>
ññ( )
>
ññ) *

QueryAsync
ññ+ 5
(
ññ5 6

Expression
ññ6 @
<
ññ@ A
Func
ññA E
<
ññE F
TEntity
ññF M
,
ññM N
bool
ññO S
>
ññS T
>
ññT U

expression
ññV `
)
ññ` a
{
óó 

IQueryable
òò 
<
òò 
TEntity
òò 
>
òò 
entities
òò $
=
òò% &
_context
òò' /
.
òò/ 0
Set
òò0 3
<
òò3 4
TEntity
òò4 ;
>
òò; <
(
òò< =
)
òò= >
.
òò> ?
Where
òò? D
(
òòD E

expression
òòE O
??
òòP R
(
òòS T
x
òòT U
=>
òòV X
true
òòY ]
)
òò] ^
)
òò^ _
;
òò_ `
await
ôô 
Task
ôô 
.
ôô 
CompletedTask
ôô  
;
ôô  !
return
öö 
entities
öö 
;
öö 
}
õõ 
public
¢¢ 

async
¢¢ 
Task
¢¢ 
<
¢¢ 
IEnumerable
¢¢ !
<
¢¢! "
TEntity
¢¢" )
>
¢¢) *
>
¢¢* +
AllAsync
¢¢, 4
(
¢¢4 5
)
¢¢5 6
{
££ 
return
§§ 
await
§§ 
_context
§§ 
.
§§ 
Set
§§ !
<
§§! "
TEntity
§§" )
>
§§) *
(
§§* +
)
§§+ ,
.
§§, -
ToListAsync
§§- 8
(
§§8 9
)
§§9 :
;
§§: ;
}
•• 
public
≠≠ 

async
≠≠ 
Task
≠≠ 
<
≠≠ 
TEntity
≠≠ 
?
≠≠ 
>
≠≠ 
GetByIdAsync
≠≠  ,
(
≠≠, -
params
≠≠- 3
object
≠≠4 :
[
≠≠: ;
]
≠≠; <
id
≠≠= ?
)
≠≠? @
{
ÆÆ 
return
ØØ 
await
ØØ 
_context
ØØ 
.
ØØ 
Set
ØØ !
<
ØØ! "
TEntity
ØØ" )
>
ØØ) *
(
ØØ* +
)
ØØ+ ,
.
ØØ, -
	FindAsync
ØØ- 6
(
ØØ6 7
id
ØØ7 9
)
ØØ9 :
;
ØØ: ;
}
∞∞ 
public
∑∑ 

async
∑∑ 
Task
∑∑ 
<
∑∑ 
TEntity
∑∑ 
?
∑∑ 
>
∑∑ 

FirstAsync
∑∑  *
(
∑∑* +
)
∑∑+ ,
{
∏∏ 
return
ππ 
await
ππ 
_context
ππ 
.
ππ 
Set
ππ !
<
ππ! "
TEntity
ππ" )
>
ππ) *
(
ππ* +
)
ππ+ ,
.
ππ, -!
FirstOrDefaultAsync
ππ- @
(
ππ@ A
)
ππA B
;
ππB C
}
∫∫ 
public
√√ 

async
√√ 
Task
√√ 
<
√√ 
TEntity
√√ 
?
√√ 
>
√√ 

FirstAsync
√√  *
(
√√* +

Expression
√√+ 5
<
√√5 6
Func
√√6 :
<
√√: ;
TEntity
√√; B
,
√√B C
bool
√√D H
>
√√H I
>
√√I J

expression
√√K U
)
√√U V
{
ƒƒ 
return
≈≈ 
await
≈≈ 
_context
≈≈ 
.
≈≈ 
Set
≈≈ !
<
≈≈! "
TEntity
≈≈" )
>
≈≈) *
(
≈≈* +
)
≈≈+ ,
.
≈≈, -!
FirstOrDefaultAsync
≈≈- @
(
≈≈@ A

expression
≈≈A K
??
≈≈L N
(
≈≈O P
x
≈≈P Q
=>
≈≈R T
true
≈≈U Y
)
≈≈Y Z
)
≈≈Z [
;
≈≈[ \
}
∆∆ 
public
ÕÕ 

async
ÕÕ 
Task
ÕÕ 
<
ÕÕ 
TEntity
ÕÕ 
?
ÕÕ 
>
ÕÕ 
	LastAsync
ÕÕ  )
(
ÕÕ) *
)
ÕÕ* +
{
ŒŒ 
return
œœ 
await
œœ 
_context
œœ 
.
œœ 
Set
œœ !
<
œœ! "
TEntity
œœ" )
>
œœ) *
(
œœ* +
)
œœ+ ,
.
œœ, - 
LastOrDefaultAsync
œœ- ?
(
œœ? @
)
œœ@ A
;
œœA B
}
–– 
public
ŸŸ 

async
ŸŸ 
Task
ŸŸ 
<
ŸŸ 
TEntity
ŸŸ 
?
ŸŸ 
>
ŸŸ 
	LastAsync
ŸŸ  )
(
ŸŸ) *

Expression
ŸŸ* 4
<
ŸŸ4 5
Func
ŸŸ5 9
<
ŸŸ9 :
TEntity
ŸŸ: A
,
ŸŸA B
bool
ŸŸC G
>
ŸŸG H
>
ŸŸH I

expression
ŸŸJ T
)
ŸŸT U
{
⁄⁄ 
return
€€ 
await
€€ 
_context
€€ 
.
€€ 
Set
€€ !
<
€€! "
TEntity
€€" )
>
€€) *
(
€€* +
)
€€+ ,
.
€€, - 
LastOrDefaultAsync
€€- ?
(
€€? @

expression
€€@ J
??
€€K M
(
€€N O
x
€€O P
=>
€€Q S
true
€€T X
)
€€X Y
)
€€Y Z
;
€€Z [
}
‹‹ 
public
ÁÁ 

async
ÁÁ 
Task
ÁÁ 
<
ÁÁ 
IEnumerable
ÁÁ !
<
ÁÁ! "
TEntity
ÁÁ" )
>
ÁÁ) *
>
ÁÁ* +
	SomeAsync
ÁÁ, 5
(
ÁÁ5 6

Expression
ÁÁ6 @
<
ÁÁ@ A
Func
ÁÁA E
<
ÁÁE F
TEntity
ÁÁF M
,
ÁÁM N
bool
ÁÁO S
>
ÁÁS T
>
ÁÁT U

expression
ÁÁV `
,
ÁÁ` a
int
ÁÁb e
skip
ÁÁf j
,
ÁÁj k
int
ÁÁl o
amount
ÁÁp v
)
ÁÁv w
{
ËË 
return
ÈÈ 
await
ÈÈ 
_context
ÈÈ 
.
ÈÈ 
Set
ÈÈ !
<
ÈÈ! "
TEntity
ÈÈ" )
>
ÈÈ) *
(
ÈÈ* +
)
ÈÈ+ ,
.
ÈÈ, -
Where
ÈÈ- 2
(
ÈÈ2 3

expression
ÈÈ3 =
??
ÈÈ> @
(
ÈÈA B
x
ÈÈB C
=>
ÈÈD F
true
ÈÈG K
)
ÈÈK L
)
ÈÈL M
.
ÈÈM N
Skip
ÈÈN R
(
ÈÈR S
skip
ÈÈS W
)
ÈÈW X
.
ÈÈX Y
Take
ÈÈY ]
(
ÈÈ] ^
amount
ÈÈ^ d
)
ÈÈd e
.
ÈÈe f
ToListAsync
ÈÈf q
(
ÈÈq r
)
ÈÈr s
;
ÈÈs t
}
ÍÍ 
public
ÙÙ 

async
ÙÙ 
Task
ÙÙ 
<
ÙÙ 
IEnumerable
ÙÙ !
<
ÙÙ! "
TEntity
ÙÙ" )
>
ÙÙ) *
>
ÙÙ* +
	SkipAsync
ÙÙ, 5
(
ÙÙ5 6

Expression
ÙÙ6 @
<
ÙÙ@ A
Func
ÙÙA E
<
ÙÙE F
TEntity
ÙÙF M
,
ÙÙM N
bool
ÙÙO S
>
ÙÙS T
>
ÙÙT U

expression
ÙÙV `
,
ÙÙ` a
int
ÙÙb e
skip
ÙÙf j
)
ÙÙj k
{
ıı 
return
ˆˆ 
await
ˆˆ 
_context
ˆˆ 
.
ˆˆ 
Set
ˆˆ !
<
ˆˆ! "
TEntity
ˆˆ" )
>
ˆˆ) *
(
ˆˆ* +
)
ˆˆ+ ,
.
ˆˆ, -
Where
ˆˆ- 2
(
ˆˆ2 3

expression
ˆˆ3 =
??
ˆˆ> @
(
ˆˆA B
x
ˆˆB C
=>
ˆˆD F
true
ˆˆG K
)
ˆˆK L
)
ˆˆL M
.
ˆˆM N
Skip
ˆˆN R
(
ˆˆR S
skip
ˆˆS W
)
ˆˆW X
.
ˆˆX Y
ToListAsync
ˆˆY d
(
ˆˆd e
)
ˆˆe f
;
ˆˆf g
}
˜˜ 
public
ÅÅ 

async
ÅÅ 
Task
ÅÅ 
<
ÅÅ 
IEnumerable
ÅÅ !
<
ÅÅ! "
TEntity
ÅÅ" )
>
ÅÅ) *
>
ÅÅ* +
	TakeAsync
ÅÅ, 5
(
ÅÅ5 6

Expression
ÅÅ6 @
<
ÅÅ@ A
Func
ÅÅA E
<
ÅÅE F
TEntity
ÅÅF M
,
ÅÅM N
bool
ÅÅO S
>
ÅÅS T
>
ÅÅT U

expression
ÅÅV `
,
ÅÅ` a
int
ÅÅb e
amount
ÅÅf l
)
ÅÅl m
{
ÇÇ 
return
ÉÉ 
await
ÉÉ 
_context
ÉÉ 
.
ÉÉ 
Set
ÉÉ !
<
ÉÉ! "
TEntity
ÉÉ" )
>
ÉÉ) *
(
ÉÉ* +
)
ÉÉ+ ,
.
ÉÉ, -
Where
ÉÉ- 2
(
ÉÉ2 3

expression
ÉÉ3 =
??
ÉÉ> @
(
ÉÉA B
x
ÉÉB C
=>
ÉÉD F
true
ÉÉG K
)
ÉÉK L
)
ÉÉL M
.
ÉÉM N
Take
ÉÉN R
(
ÉÉR S
amount
ÉÉS Y
)
ÉÉY Z
.
ÉÉZ [
ToListAsync
ÉÉ[ f
(
ÉÉf g
)
ÉÉg h
;
ÉÉh i
}
ÑÑ 
public
ãã 

async
ãã 
Task
ãã 
<
ãã 
int
ãã 
>
ãã 

CountAsync
ãã %
(
ãã% &
)
ãã& '
{
åå 
return
çç 
await
çç 
_context
çç 
.
çç 
Set
çç !
<
çç! "
TEntity
çç" )
>
çç) *
(
çç* +
)
çç+ ,
.
çç, -

CountAsync
çç- 7
(
çç7 8
)
çç8 9
;
çç9 :
}
éé 
public
óó 

async
óó 
Task
óó 
<
óó 
int
óó 
>
óó 

CountAsync
óó %
(
óó% &

Expression
óó& 0
<
óó0 1
Func
óó1 5
<
óó5 6
TEntity
óó6 =
,
óó= >
bool
óó? C
>
óóC D
>
óóD E

expression
óóF P
)
óóP Q
{
òò 
return
ôô 
await
ôô 
_context
ôô 
.
ôô 
Set
ôô !
<
ôô! "
TEntity
ôô" )
>
ôô) *
(
ôô* +
)
ôô+ ,
.
ôô, -

CountAsync
ôô- 7
(
ôô7 8

expression
ôô8 B
??
ôôC E
(
ôôF G
x
ôôG H
=>
ôôI K
true
ôôL P
)
ôôP Q
)
ôôQ R
;
ôôR S
}
öö 
public
££ 

async
££ 
Task
££ 
<
££ 
bool
££ 
>
££ 

ExistAsync
££ &
(
££& '

Expression
££' 1
<
££1 2
Func
££2 6
<
££6 7
TEntity
££7 >
,
££> ?
bool
££@ D
>
££D E
>
££E F

expression
££G Q
)
££Q R
{
§§ 
var
•• 
entity
•• 
=
•• 
await
•• 
_context
•• #
.
••# $
Set
••$ '
<
••' (
TEntity
••( /
>
••/ 0
(
••0 1
)
••1 2
.
••2 3!
FirstOrDefaultAsync
••3 F
(
••F G

expression
••G Q
??
••R T
(
••U V
x
••V W
=>
••X Z
true
••[ _
)
••_ `
)
••` a
;
••a b
return
¶¶ 
entity
¶¶ 
!=
¶¶ 
null
¶¶ 
;
¶¶ 
}
ßß 
public
ØØ 

async
ØØ 
Task
ØØ 
<
ØØ 
bool
ØØ 
>
ØØ 

ExistAsync
ØØ &
(
ØØ& '
params
ØØ' -
object
ØØ. 4
[
ØØ4 5
]
ØØ5 6
id
ØØ7 9
)
ØØ9 :
{
∞∞ 
var
±± 
entity
±± 
=
±± 
await
±± 
_context
±± #
.
±±# $
Set
±±$ '
<
±±' (
TEntity
±±( /
>
±±/ 0
(
±±0 1
)
±±1 2
.
±±2 3
	FindAsync
±±3 <
(
±±< =
id
±±= ?
)
±±? @
;
±±@ A
return
≤≤ 
entity
≤≤ 
!=
≤≤ 
null
≤≤ 
;
≤≤ 
}
≥≥ 
public
ºº 

async
ºº 
Task
ºº 
<
ºº 
bool
ºº 
>
ºº 
AnyAsync
ºº $
(
ºº$ %

Expression
ºº% /
<
ºº/ 0
Func
ºº0 4
<
ºº4 5
TEntity
ºº5 <
,
ºº< =
bool
ºº> B
>
ººB C
>
ººC D

expression
ººE O
)
ººO P
{
ΩΩ 
return
ææ 
await
ææ 
_context
ææ 
.
ææ 
Set
ææ !
<
ææ! "
TEntity
ææ" )
>
ææ) *
(
ææ* +
)
ææ+ ,
.
ææ, -
AnyAsync
ææ- 5
(
ææ5 6

expression
ææ6 @
??
ææA C
(
ææD E
x
ææE F
=>
ææG I
true
ææJ N
)
ææN O
)
ææO P
;
ææP Q
}
øø 
}¬¬ Í
^F:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\Enumerators\DocumentValidationResponse.cs
	namespace 	

SimpleJobs
 
. 
Enumerators  
;  !
public 
enum &
DocumentValidationResponse &
{ 
Invalid 
= 
$num 
, 
Valid 	
=
 
$num 
, 
	WrongSize 
= 
$num 
} è
NF:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\Enumerators\TextEncode.cs
	namespace 	

SimpleJobs
 
. 
Enumerators  
;  !
public 
enum 

TextEncode 
{ 
ASCII 	
=
 
$num 
, 
UTF8 
=	 

$num 
, 
UTF16 	
=
 
$num 
, 
UTF32 	
=
 
$num 
, 
Unicode 
= 
$num 
, 
Latin1 

= 
$num 
}   àB
RF:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\Security\EncryptionManager.cs
	namespace 	

SimpleJobs
 
. 
Security 
; 
public 
class 
EncryptionManager 
:  
IDisposable! ,
{ 
private

 
readonly

 
string

 
passwordHash

 (
;

( )
private 
readonly 
string 
IV 
; 
public 

EncryptionManager 
( 
string #
password$ ,
,, -
string. 4
?4 5
iv6 8
=9 :
null; ?
)? @
{ 
byte 
[ 
] 
	hashBytes 
= 
MD5 
. 
HashData '
(' (
Encoding( 0
.0 1
UTF81 5
.5 6
GetBytes6 >
(> ?
password? G
)G H
)H I
;I J
passwordHash 
= 
	hashBytes  
.  !
ByteArrayToString! 2
(2 3
)3 4
.4 5
Replace5 <
(< =
$str= @
,@ A
$strB D
)D E
[E F
..F H
$numH J
]J K
;K L
iv 

??= 
passwordHash 
. 
	Substring %
(% &
$num& (
,( )
$num* ,
), -
;- .
byte 
[ 
] 
hashIVBytes 
= 
MD5  
.  !
HashData! )
() *
Encoding* 2
.2 3
UTF83 7
.7 8
GetBytes8 @
(@ A
ivA C
)C D
)D E
;E F
IV 

= 
hashIVBytes 
. 
ByteArrayToString *
(* +
)+ ,
., -
Replace- 4
(4 5
$str5 8
,8 9
$str: <
)< =
.= >
	Substring> G
(G H
$numH J
,J K
$numL N
)N O
;O P
} 
~'' 
EncryptionManager'' 
('' 
)'' 
=>'' 
Dispose'' #
(''# $
)''$ %
;''% &
public-- 

void-- 
Dispose-- 
(-- 
)-- 
{.. 
GC// 

.//
 
SuppressFinalize// 
(// 
this//  
)//  !
;//! "
}00 
[;; 
System;; 
.;; 
Diagnostics;; 
.;; 
CodeAnalysis;; $
.;;$ %
SuppressMessage;;% 4
(;;4 5
$str;;5 <
,;;< =
$str;;> h
,;;h i
Justification;;j w
=;;x y
$str	;;z ´
)
;;´ ¨
]
;;¨ ≠
public<< 

byte<< 
[<< 
]<< 

EncryptAES<< 
(<< 
byte<< !
[<<! "
]<<" #
data<<$ (
)<<( )
{== 
using>> 
(>> 
Aes>> 
aesAlg>> 
=>> 
Aes>> 
.>>  
Create>>  &
(>>& '
)>>' (
)>>( )
{?? 	
aesAlg@@ 
.@@ 
Key@@ 
=@@ 
Encoding@@ !
.@@! "
UTF8@@" &
.@@& '
GetBytes@@' /
(@@/ 0
passwordHash@@0 <
)@@< =
;@@= >
aesAlgAA 
.AA 
IVAA 
=AA 
EncodingAA  
.AA  !
UTF8AA! %
.AA% &
GetBytesAA& .
(AA. /
IVAA/ 1
)AA1 2
;AA2 3
usingCC 
(CC 
MemoryStreamCC 
	msEncryptCC  )
=CC* +
newCC, /
(CC/ 0
)CC0 1
)CC1 2
{DD 
usingEE 
(EE 
CryptoStreamEE #
	csEncryptEE$ -
=EE. /
newEE0 3
(EE3 4
	msEncryptEE4 =
,EE= >
aesAlgEE? E
.EEE F
CreateEncryptorEEF U
(EEU V
)EEV W
,EEW X
CryptoStreamModeEEY i
.EEi j
WriteEEj o
)EEo p
)EEp q
{FF 
	csEncryptGG 
.GG 
WriteGG #
(GG# $
dataGG$ (
,GG( )
$numGG* +
,GG+ ,
dataGG- 1
.GG1 2
LengthGG2 8
)GG8 9
;GG9 :
	csEncryptHH 
.HH 
FlushFinalBlockHH -
(HH- .
)HH. /
;HH/ 0
returnII 
	msEncryptII $
.II$ %
ToArrayII% ,
(II, -
)II- .
;II. /
}JJ 
}KK 
}LL 	
}MM 
[TT 
SystemTT 
.TT 
DiagnosticsTT 
.TT 
CodeAnalysisTT $
.TT$ %
SuppressMessageTT% 4
(TT4 5
$strTT5 <
,TT< =
$strTT> h
,TTh i
JustificationTTj w
=TTx y
$str	TTz ´
)
TT´ ¨
]
TT¨ ≠
publicUU 

byteUU 
[UU 
]UU 

DecryptAESUU 
(UU 
byteUU !
[UU! "
]UU" #
encryptedDataUU$ 1
)UU1 2
{VV 
usingWW 
(WW 
AesWW 
aesAlgWW 
=WW 
AesWW 
.WW  
CreateWW  &
(WW& '
)WW' (
)WW( )
{XX 	
aesAlgYY 
.YY 
KeyYY 
=YY 
EncodingYY !
.YY! "
UTF8YY" &
.YY& '
GetBytesYY' /
(YY/ 0
passwordHashYY0 <
)YY< =
;YY= >
aesAlgZZ 
.ZZ 
IVZZ 
=ZZ 
EncodingZZ  
.ZZ  !
UTF8ZZ! %
.ZZ% &
GetBytesZZ& .
(ZZ. /
IVZZ/ 1
)ZZ1 2
;ZZ2 3
using\\ 
(\\ 
MemoryStream\\ 
	msDecrypt\\  )
=\\* +
new\\, /
(\\/ 0
encryptedData\\0 =
)\\= >
)\\> ?
{]] 
using^^ 
(^^ 
CryptoStream^^ #
	csDecrypt^^$ -
=^^. /
new^^0 3
(^^3 4
	msDecrypt^^4 =
,^^= >
aesAlg^^? E
.^^E F
CreateDecryptor^^F U
(^^U V
)^^V W
,^^W X
CryptoStreamMode^^Y i
.^^i j
Read^^j n
)^^n o
)^^o p
{__ 
using`` 
(`` 
MemoryStream`` '
ms``( *
=``+ ,
new``- 0
(``0 1
)``1 2
)``2 3
{aa 
	csDecryptbb !
.bb! "
CopyTobb" (
(bb( )
msbb) +
)bb+ ,
;bb, -
returncc 
mscc !
.cc! "
ToArraycc" )
(cc) *
)cc* +
;cc+ ,
}dd 
}ee 
}ff 
}gg 	
}hh 
publicoo 

stringoo 
EncryptAESTextoo  
(oo  !
stringoo! '
dataoo( ,
)oo, -
{pp !
ArgumentNullExceptionrr 
.rr 
ThrowIfNullrr )
(rr) *
datarr* .
)rr. /
;rr/ 0
returnuu 

EncryptAESuu 
(uu 
datauu 
.uu 
StringToByteArrayuu 0
(uu0 1
)uu1 2
)uu2 3
.uu3 4
ByteArrayToStringuu4 E
(uuE F
)uuF G
;uuG H
}vv 
public}} 

string}} 
DecryptAESText}}  
(}}  !
string}}! '
encryptedData}}( 5
)}}5 6
{~~ #
ArgumentNullException
ÄÄ 
.
ÄÄ 
ThrowIfNull
ÄÄ )
(
ÄÄ) *
encryptedData
ÄÄ* 7
)
ÄÄ7 8
;
ÄÄ8 9
return
ÉÉ 

DecryptAES
ÉÉ 
(
ÉÉ 
encryptedData
ÉÉ '
.
ÉÉ' (
StringToByteArray
ÉÉ( 9
(
ÉÉ9 :
)
ÉÉ: ;
)
ÉÉ; <
.
ÉÉ< =
ByteArrayToString
ÉÉ= N
(
ÉÉN O
)
ÉÉO P
;
ÉÉP Q
}
ÑÑ 
}àà  !
JF:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\Security\Generator.cs
	namespace 	

SimpleJobs
 
. 
Security 
; 
public 
static 
class 
	Generator 
{ 
public 

static 
string 

RandomText #
(# $
int$ '
length( .
,. /
bool0 4$
includeSpecialCharacters5 M
=N O
falseP U
)U V
{ 
const 
string 
caracteresNormais &
=' (
$str) i
;i j
const 
string 
caracteresEspeciais (
=) *
$str+ 5
;5 6
string 

caracteres 
= $
includeSpecialCharacters 4
?5 6
(7 8
caracteresNormais8 I
+J K
caracteresEspeciaisL _
)_ `
:a b
caracteresNormaisc t
;t u
StringBuilder 
sb 
= 
new 
( 
)  
;  !
Random 
rnd 
= 
new 
( 
) 
; 
for 
( 
int 
i 
= 
$num 
; 
i 
< 
length "
;" #
i$ %
++% '
)' (
{ 	
int 
indice 
= 
rnd 
. 
Next !
(! "

caracteres" ,
., -
Length- 3
)3 4
;4 5
sb 
. 
Append 
( 

caracteres  
[  !
indice! '
]' (
)( )
;) *
} 	
return 
sb 
. 
ToString 
( 
) 
; 
} 
public$$ 

static$$ 
string$$ 
Uid$$ 
($$ 
)$$ 
{%% 
StringBuilder&& 
sb&& 
=&& 
new&& 
(&& 
)&&  
;&&  !
sb'' 

.''
 
Append'' 
('' 

RandomText'' 
('' 
$num'' 
)'' 
)''  
;''  !
sb(( 

.((
 
Append(( 
((( 
$char(( 
)(( 
;(( 
sb)) 

.))
 
Append)) 
()) 

RandomText)) 
()) 
$num)) 
))) 
)))  
;))  !
sb** 

.**
 
Append** 
(** 
$char** 
)** 
;** 
sb++ 

.++
 
Append++ 
(++ 

RandomText++ 
(++ 
$num++ 
)++ 
)++  
;++  !
sb,, 

.,,
 
Append,, 
(,, 
$char,, 
),, 
;,, 
sb-- 

.--
 
Append-- 
(-- 

RandomText-- 
(-- 
$num-- 
)-- 
)--  
;--  !
return// 
sb// 
.// 
ToString// 
(// 
)// 
.// 
ToUpper// $
(//$ %
)//% &
;//& '
}00 
public77 

static77 
string77 
DefaultGuid77 $
(77$ %
bool77% )$
includeSpecialCharacters77* B
=77C D
true77E I
)77I J
{88 
Guid99 
guid99 
=99 
Guid99 
.99 
NewGuid99  
(99  !
)99! "
;99" #
return:: $
includeSpecialCharacters:: '
?::( )
guid::* .
.::. /
ToString::/ 7
(::7 8
)::8 9
:::: ;
guid::< @
.::@ A
ToString::A I
(::I J
)::J K
.::K L
Replace::L S
(::S T
$str::T W
,::W X
$str::Y [
)::[ \
;::\ ]
};; 
}== Ë&
XF:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\Security\SignedEncryptionManager.cs
	namespace 	

SimpleJobs
 
. 
Security 
; 
public 
class #
SignedEncryptionManager $
:% &
IDisposable' 2
{ 
private

 
readonly

 
RSA

 
	publicKey

 "
;

" #
public 
#
SignedEncryptionManager "
(" #
X509Certificate2# 3
certificate4 ?
,? @
boolA E$
checkCertificateValidityF ^
=_ `
falsea f
)f g
{ !
ArgumentNullException 
. 
ThrowIfNull )
() *
certificate* 5
)5 6
;6 7
if 

( $
checkCertificateValidity $
)$ %
{ 	
DateTime 
currentDateUtc #
=$ %
DateTime& .
.. /
UtcNow/ 5
;5 6
if 
( 
! 
( 
currentDateUtc  
>=! #
certificate$ /
./ 0
	NotBefore0 9
&&: <
currentDateUtc= K
<=L N
certificateO Z
.Z [
NotAfter[ c
)c d
)d e
throw 
new %
InvalidOperationException 3
(3 4
$str4 V
)V W
;W X
} 	
if 

( 
certificate 
. 
GetRSAPrivateKey (
(( )
)) *
==+ -
null. 2
)2 3
throw 
new %
InvalidOperationException /
(/ 0
$str0 a
)a b
;b c
	publicKey 
= 
certificate 
.  
GetRSAPrivateKey  0
(0 1
)1 2
;2 3
}   
~** #
SignedEncryptionManager** 
(** 
)** 
=>** !
Dispose**" )
(**) *
)*** +
;**+ ,
public00 

void00 
Dispose00 
(00 
)00 
{11 
GC22 

.22
 
SuppressFinalize22 
(22 
this22  
)22  !
;22! "
}33 
public>> 

byte>> 
[>> 
]>> 
Encrypt>> 
(>> 
byte>> 
[>> 
]>>  
data>>! %
)>>% &
{?? !
ArgumentNullException@@ 
.@@ 
ThrowIfNull@@ )
(@@) *
data@@* .
)@@. /
;@@/ 0
usingBB 
RSABB 
rsaBB 
=BB 
	publicKeyBB !
;BB! "
returnCC 
rsaCC 
.CC 
EncryptCC 
(CC 
dataCC 
,CC   
RSAEncryptionPaddingCC! 5
.CC5 6

OaepSHA256CC6 @
)CC@ A
;CCA B
}DD 
publicKK 

byteKK 
[KK 
]KK 
DecryptKK 
(KK 
byteKK 
[KK 
]KK  
encryptedDataKK! .
)KK. /
{LL !
ArgumentNullExceptionMM 
.MM 
ThrowIfNullMM )
(MM) *
encryptedDataMM* 7
)MM7 8
;MM8 9
usingOO 
RSAOO 
rsaOO 
=OO 
	publicKeyOO !
;OO! "
returnPP 
rsaPP 
.PP 
DecryptPP 
(PP 
encryptedDataPP (
,PP( ) 
RSAEncryptionPaddingPP* >
.PP> ?

OaepSHA256PP? I
)PPI J
;PPJ K
}QQ 
publicXX 

stringXX 
EncryptTextXX 
(XX 
stringXX $
dataXX% )
)XX) *
{YY !
ArgumentNullException[[ 
.[[ 
ThrowIfNull[[ )
([[) *
data[[* .
)[[. /
;[[/ 0
return^^ 
Encrypt^^ 
(^^ 
data^^ 
.^^ 
StringToByteArray^^ -
(^^- .
)^^. /
)^^/ 0
.^^0 1
ByteArrayToString^^1 B
(^^B C
)^^C D
;^^D E
}__ 
publicff 

stringff 
DecryptTextff 
(ff 
stringff $
encryptedDataff% 2
)ff2 3
{gg !
ArgumentNullExceptionii 
.ii 
ThrowIfNullii )
(ii) *
encryptedDataii* 7
)ii7 8
;ii8 9
returnll 
Decryptll 
(ll 
encryptedDatall $
.ll$ %
StringToByteArrayll% 6
(ll6 7
)ll7 8
)ll8 9
.ll9 :
ByteArrayToStringll: K
(llK L
)llL M
;llM N
}mm 
}pp @
>F:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\Usings.cs¿G
RF:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\Utility\DocumentValidation.cs
	namespace 	

SimpleJobs
 
. 
Utility 
; 
public 
static 
partial 
class 
DocumentValidation .
{ 
[

 
GeneratedRegex

 
(

 
$str

 
)

  
]

  !
private 
static 
partial 
Regex  
CPFRegex! )
() *
)* +
;+ ,
[ 
GeneratedRegex 
( 
$str 
)  
]  !
private 
static 
partial 
Regex  
	CNPJRegex! *
(* +
)+ ,
;, -
[ 
GeneratedRegex 
( 
$str 
)  
]  !
private 
static 
partial 
Regex  
PISRegex! )
() *
)* +
;+ ,
public 

static &
DocumentValidationResponse ,

CPFIsValid- 7
(7 8
string8 >
cpf? B
)B C
{ !
ArgumentNullException 
. 
ThrowIfNull )
() *
cpf* -
)- .
;. /
cpf   
=   
cpf   
.   
ClearSymbols   
(   
)    
;    !
if!! 

(!! 
cpf!! 
.!! 
Length!! 
!=!! 
$num!! 
||!! 
!!!  !
CPFRegex!!! )
(!!) *
)!!* +
.!!+ ,
IsMatch!!, 3
(!!3 4
cpf!!4 7
)!!7 8
)!!8 9
return"" &
DocumentValidationResponse"" -
.""- .
	WrongSize"". 7
;""7 8
int%% 
[%% 
]%% )
multiplicadoresPrimeiroDigito%% +
=%%, -
[%%. /
$num%%/ 1
,%%1 2
$num%%3 4
,%%4 5
$num%%6 7
,%%7 8
$num%%9 :
,%%: ;
$num%%< =
,%%= >
$num%%? @
,%%@ A
$num%%B C
,%%C D
$num%%E F
,%%F G
$num%%H I
]%%I J
;%%J K
int&& 
[&& 
]&& (
multiplicadoresSegundoDigito&& *
=&&+ ,
[&&- .
$num&&. 0
,&&0 1
$num&&2 4
,&&4 5
$num&&6 7
,&&7 8
$num&&9 :
,&&: ;
$num&&< =
,&&= >
$num&&? @
,&&@ A
$num&&B C
,&&C D
$num&&E F
,&&F G
$num&&H I
,&&I J
$num&&K L
]&&L M
;&&M N
return(( 

CheckDigit(( 
((( 
cpf(( 
,(( )
multiplicadoresPrimeiroDigito(( <
)((< =
&&((> @

CheckDigit((A K
(((K L
cpf((L O
,((O P(
multiplicadoresSegundoDigito((Q m
)((m n
?((o p'
DocumentValidationResponse	((q ã
.
((ã å
Valid
((å ë
:
((í ì(
DocumentValidationResponse
((î Æ
.
((Æ Ø
Invalid
((Ø ∂
;
((∂ ∑
})) 
public00 

static00 &
DocumentValidationResponse00 ,
CNPJIsValid00- 8
(008 9
string009 ?
cnpj00@ D
)00D E
{11 !
ArgumentNullException22 
.22 
ThrowIfNull22 )
(22) *
cnpj22* .
)22. /
;22/ 0
cnpj44 
=44 
cnpj44 
.44 
ClearSymbols44  
(44  !
)44! "
;44" #
if55 

(55 
cnpj55 
.55 
Length55 
!=55 
$num55 
||55  
!55! "
	CNPJRegex55" +
(55+ ,
)55, -
.55- .
IsMatch55. 5
(555 6
cnpj556 :
)55: ;
)55; <
return66 &
DocumentValidationResponse66 -
.66- .
	WrongSize66. 7
;667 8
int88 
[88 
]88 )
multiplicadoresPrimeiroDigito88 +
=88, -
[88. /
$num88/ 0
,880 1
$num882 3
,883 4
$num885 6
,886 7
$num888 9
,889 :
$num88; <
,88< =
$num88> ?
,88? @
$num88A B
,88B C
$num88D E
,88E F
$num88G H
,88H I
$num88J K
,88K L
$num88M N
,88N O
$num88P Q
]88Q R
;88R S
int99 
[99 
]99 (
multiplicadoresSegundoDigito99 *
=99+ ,
[99- .
$num99. /
,99/ 0
$num991 2
,992 3
$num994 5
,995 6
$num997 8
,998 9
$num99: ;
,99; <
$num99= >
,99> ?
$num99@ A
,99A B
$num99C D
,99D E
$num99F G
,99G H
$num99I J
,99J K
$num99L M
,99M N
$num99O P
,99P Q
$num99R S
]99S T
;99T U
return;; 

CheckDigit;; 
(;; 
cnpj;; 
,;; )
multiplicadoresPrimeiroDigito;;  =
);;= >
&&;;? A

CheckDigit;;B L
(;;L M
cnpj;;M Q
,;;Q R(
multiplicadoresSegundoDigito;;S o
);;o p
?;;q r'
DocumentValidationResponse	;;s ç
.
;;ç é
Valid
;;é ì
:
;;î ï(
DocumentValidationResponse
;;ñ ∞
.
;;∞ ±
Invalid
;;± ∏
;
;;∏ π
}<< 
publicCC 

staticCC &
DocumentValidationResponseCC ,
	PISsValidCC- 6
(CC6 7
stringCC7 =
pisCC> A
)CCA B
{DD !
ArgumentNullExceptionEE 
.EE 
ThrowIfNullEE )
(EE) *
pisEE* -
)EE- .
;EE. /
pisGG 
=GG 
pisGG 
.GG 
ClearSymbolsGG 
(GG 
)GG  
;GG  !
ifHH 

(HH 
pisHH 
.HH 
LengthHH 
!=HH 
$numHH 
||HH 
!HH  !
PISRegexHH! )
(HH) *
)HH* +
.HH+ ,
IsMatchHH, 3
(HH3 4
pisHH4 7
)HH7 8
)HH8 9
returnII &
DocumentValidationResponseII -
.II- .
	WrongSizeII. 7
;II7 8
intKK 
[KK 
]KK 
multiplicadoresKK 
=KK 
[KK  !
$numKK! "
,KK" #
$numKK$ %
,KK% &
$numKK' (
,KK( )
$numKK* +
,KK+ ,
$numKK- .
,KK. /
$numKK0 1
,KK1 2
$numKK3 4
,KK4 5
$numKK6 7
,KK7 8
$numKK9 :
,KK: ;
$numKK< =
]KK= >
;KK> ?
returnMM 

CheckDigitMM 
(MM 
pisMM 
,MM 
multiplicadoresMM .
)MM. /
?MM0 1&
DocumentValidationResponseMM2 L
.MML M
ValidMMM R
:MMS T&
DocumentValidationResponseMMU o
.MMo p
InvalidMMp w
;MMw x
}NN 
privateZZ 
staticZZ 
boolZZ 

CheckDigitZZ "
(ZZ" #
stringZZ# )
numeroZZ* 0
,ZZ0 1
intZZ2 5
[ZZ5 6
]ZZ6 7
multiplicadoresZZ8 G
)ZZG H
{[[ 
int\\ 
soma\\ 
=\\ 
$num\\ 
;\\ 
for]] 
(]] 
int]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 
multiplicadores]] +
.]]+ ,
Length]], 2
;]]2 3
i]]4 5
++]]5 7
)]]7 8
soma^^ 
+=^^ 
int^^ 
.^^ 
Parse^^ 
(^^ 
numero^^ $
[^^$ %
i^^% &
]^^& '
.^^' (
ToString^^( 0
(^^0 1
)^^1 2
)^^2 3
*^^4 5
multiplicadores^^6 E
[^^E F
i^^F G
]^^G H
;^^H I
int`` 
resto`` 
=`` 
soma`` 
%`` 
$num`` 
;`` 
intaa 
digitoVerificadoraa 
=aa 
restoaa  %
<aa& '
$numaa( )
?aa* +
$numaa, -
:aa. /
$numaa0 2
-aa3 4
restoaa5 :
;aa: ;
returncc 
digitoVerificadorcc  
==cc! #
intcc$ '
.cc' (
Parsecc( -
(cc- .
numerocc. 4
[cc4 5
^cc5 6
$numcc6 7
]cc7 8
.cc8 9
ToStringcc9 A
(ccA B
)ccB C
)ccC D
;ccD E
}dd 
}hh “å
JF:\Projetos\Git\SimpleJobs\src\SimpleJobs\SimpleJobs\Utility\Extensions.cs
	namespace 	

SimpleJobs
 
. 
Utility 
; 
public 
static 
partial 
class 

Extensions &
{ 
public 

static 
string 
GetUntilOrEmpty (
(( )
this) -
string. 4
text5 9
,9 :
char; ?
stopAt@ F
)F G
{ 
if 

( 
string 
. 
IsNullOrWhiteSpace %
(% &
text& *
)* +
)+ ,
return 
string 
. 
Empty 
;  
int 
charLocation 
= 
text 
.  
IndexOf  '
(' (
stopAt( .
,. /
StringComparison0 @
.@ A
OrdinalA H
)H I
;I J
return 
charLocation 
> 
$num 
?  !
text" &
[& '
..' )
charLocation) 5
]5 6
:7 8
string9 ?
.? @
Empty@ E
;E F
} 
public 

static 
string 
GetUntil !
(! "
this" &
string' -
text. 2
,2 3
char4 8
stopAt9 ?
)? @
{   
if!! 

(!! 
string!! 
.!! 
IsNullOrWhiteSpace!! %
(!!% &
text!!& *
)!!* +
)!!+ ,
return"" 
text"" 
;"" 
int$$ 
charLocation$$ 
=$$ 
text$$ 
.$$  
IndexOf$$  '
($$' (
stopAt$$( .
,$$. /
StringComparison$$0 @
.$$@ A
Ordinal$$A H
)$$H I
;$$I J
return%% 
charLocation%% 
>%% 
$num%% 
?%%  !
text%%" &
[%%& '
..%%' )
charLocation%%) 5
]%%5 6
:%%7 8
text%%9 =
;%%= >
}'' 
public// 

static// 
string// 
GetAfterOrEmpty// (
(//( )
this//) -
string//. 4
text//5 9
,//9 :
char//; ?
startAt//@ G
)//G H
{00 
if11 

(11 
string11 
.11 
IsNullOrWhiteSpace11 %
(11% &
text11& *
)11* +
)11+ ,
return22 
string22 
.22 
Empty22 
;22  
int44 
charLocation44 
=44 
text44 
.44  
IndexOf44  '
(44' (
startAt44( /
,44/ 0
StringComparison441 A
.44A B
Ordinal44B I
)44I J
;44J K
return55 
charLocation55 
>55 
$num55 
?55  !
text55" &
[55& '
(55' (
charLocation55( 4
+555 6
$num557 8
)558 9
..559 ;
]55; <
:55= >
string55? E
.55E F
Empty55F K
;55K L
}66 
public>> 

static>> 
string>> 
GetAfter>> !
(>>! "
this>>" &
string>>' -
text>>. 2
,>>2 3
char>>4 8
startAt>>9 @
)>>@ A
{?? 
if@@ 

(@@ 
string@@ 
.@@ 
IsNullOrWhiteSpace@@ %
(@@% &
text@@& *
)@@* +
)@@+ ,
returnAA 
textAA 
;AA 
intCC 
charLocationCC 
=CC 
textCC 
.CC  
IndexOfCC  '
(CC' (
startAtCC( /
,CC/ 0
StringComparisonCC1 A
.CCA B
OrdinalCCB I
)CCI J
;CCJ K
returnDD 
charLocationDD 
>DD 
$numDD 
?DD  !
textDD" &
[DD& '
(DD' (
charLocationDD( 4
+DD5 6
$numDD7 8
)DD8 9
..DD9 ;
]DD; <
:DD= >
textDD? C
;DDC D
}EE 
publicPP 

staticPP 
stringPP #
ClearAccentedCharactersPP 0
(PP0 1
thisPP1 5
stringPP6 <
valuePP= B
)PPB C
{QQ !
ArgumentNullExceptionRR 
.RR 
ThrowIfNullRR )
(RR) *
valueRR* /
)RR/ 0
;RR0 1
ifTT 

(TT 
valueTT 
.TT 
LengthTT 
<TT 
$numTT 
)TT 
returnUU 
valueUU 
;UU 
stringWW 
resultWW 
=WW 
valueWW 
;WW 
stringXX 
[XX 
]XX 
accentedXX 
=XX 
[XX 
$strXX  
,XX  !
$strXX" %
,XX% &
$strXX' *
,XX* +
$strXX, /
,XX/ 0
$strXX1 4
,XX4 5
$strXX6 9
,XX9 :
$strXX; >
,XX> ?
$strXX@ C
,XXC D
$strXXE H
,XXH I
$strXXJ M
,XXM N
$strXXO R
,XXR S
$strXXT W
,XXW X
$strXXY \
,XX\ ]
$strXX^ a
,XXa b
$strXXc f
,XXf g
$strXXh k
,XXk l
$strXXm p
,XXp q
$strXXr u
,XXu v
$strXXw z
,XXz {
$strXX| 
,	XX Ä
$str
XXÅ Ñ
,
XXÑ Ö
$str
XXÜ â
,
XXâ ä
$str
XXã é
,
XXé è
$str
XXê ì
,
XXì î
$str
XXï ò
,
XXò ô
$str
XXö ù
,
XXù û
$str
XXü ¢
,
XX¢ £
$str
XX§ ß
,
XXß ®
$str
XX© ¨
,
XX¨ ≠
$str
XXÆ ±
,
XX± ≤
$str
XX≥ ∂
,
XX∂ ∑
$str
XX∏ ª
,
XXª º
$str
XXΩ ¿
,
XX¿ ¡
$str
XX¬ ≈
,
XX≈ ∆
$str
XX«  
,
XX  À
$str
XXÃ œ
,
XXœ –
$str
XX— ‘
,
XX‘ ’
$str
XX÷ Ÿ
,
XXŸ ⁄
$str
XX€ ﬁ
,
XXﬁ ﬂ
$str
XX‡ „
,
XX„ ‰
$str
XXÂ Ë
,
XXË È
$str
XXÍ Ì
,
XXÌ Ó
$str
XXÔ Ú
,
XXÚ Û
$str
XXÙ ˜
,
XX˜ ¯
$str
XX˘ ¸
,
XX¸ ˝
$str
XX˛ Å
,
XXÅ Ç
$str
XXÉ Ü
,
XXÜ á
$str
XXà ã
,
XXã å
$str
XXç ê
,
XXê ë
$str
XXí ï
,
XXï ñ
$str
XXó ö
]
XXö õ
;
XXõ ú
stringYY 
[YY 
]YY 
nonAccentedYY 
=YY 
[YY  
$strYY  #
,YY# $
$strYY% (
,YY( )
$strYY* -
,YY- .
$strYY/ 2
,YY2 3
$strYY4 7
,YY7 8
$strYY9 <
,YY< =
$strYY> A
,YYA B
$strYYC F
,YYF G
$strYYH K
,YYK L
$strYYM P
,YYP Q
$strYYR U
,YYU V
$strYYW Z
,YYZ [
$strYY\ _
,YY_ `
$strYYa d
,YYd e
$strYYf i
,YYi j
$strYYk n
,YYn o
$strYYp s
,YYs t
$strYYu x
,YYx y
$strYYz }
,YY} ~
$str	YY Ç
,
YYÇ É
$str
YYÑ á
,
YYá à
$str
YYâ å
,
YYå ç
$str
YYé ë
,
YYë í
$str
YYì ñ
,
YYñ ó
$str
YYò õ
,
YYõ ú
$str
YYù †
,
YY† °
$str
YY¢ •
,
YY• ¶
$str
YYß ™
,
YY™ ´
$str
YY¨ Ø
,
YYØ ∞
$str
YY± ¥
,
YY¥ µ
$str
YY∂ π
,
YYπ ∫
$str
YYª æ
,
YYæ ø
$str
YY¿ √
,
YY√ ƒ
$str
YY≈ »
,
YY» …
$str
YY  Õ
,
YYÕ Œ
$str
YYœ “
,
YY“ ”
$str
YY‘ ◊
,
YY◊ ÿ
$str
YYŸ ‹
,
YY‹ ›
$str
YYﬁ ·
,
YY· ‚
$str
YY„ Ê
,
YYÊ Á
$str
YYË Î
,
YYÎ Ï
$str
YYÌ 
,
YY Ò
$str
YYÚ ı
,
YYı ˆ
$str
YY˜ ˙
,
YY˙ ˚
$str
YY¸ ˇ
,
YYˇ Ä
$str
YYÅ Ñ
,
YYÑ Ö
$str
YYÜ â
,
YYâ ä
$str
YYã é
,
YYé è
$str
YYê ì
,
YYì î
$str
YYï ò
,
YYò ô
$str
YYö ù
]
YYù û
;
YYû ü
for[[ 
([[ 
int[[ 
i[[ 
=[[ 
$num[[ 
;[[ 
i[[ 
<[[ 
accented[[ $
.[[$ %
Length[[% +
;[[+ ,
i[[- .
++[[. 0
)[[0 1
result\\ 
=\\ 
result\\ 
.\\ 
Replace\\ #
(\\# $
accented\\$ ,
[\\, -
i\\- .
]\\. /
,\\/ 0
nonAccented\\1 <
[\\< =
i\\= >
]\\> ?
)\\? @
;\\@ A
return^^ 
result^^ 
;^^ 
}__ 
publicgg 

staticgg 
stringgg 
ClearSymbolsgg %
(gg% &
thisgg& *
stringgg+ 1
valuegg2 7
,gg7 8
boolgg9 =
useSpacegg> F
=ggG H
falseggI N
)ggN O
{hh !
ArgumentNullExceptionii 
.ii 
ThrowIfNullii )
(ii) *
valueii* /
)ii/ 0
;ii0 1
ifkk 

(kk 
valuekk 
.kk 
Lengthkk 
<kk 
$numkk 
)kk 
returnll 
valuell 
;ll 
ifnn 

(nn 
useSpacenn 
)nn 
returnoo 
ClearSymbolsRegexoo $
(oo$ %
)oo% &
.oo& '
Replaceoo' .
(oo. /
valueoo/ 4
,oo4 5
$stroo6 9
)oo9 :
.oo: ;
Replaceoo; B
(ooB C
$strooC F
,ooF G
$strooH K
)ooK L
.ooL M
ReplaceooM T
(ooT U
$strooU X
,ooX Y
$strooZ ]
)oo] ^
.oo^ _
Replaceoo_ f
(oof g
$stroog j
,ooj k
$strool o
)ooo p
.oop q
Replaceooq x
(oox y
$strooy |
,oo| }
$str	oo~ Å
)
ooÅ Ç
.
ooÇ É
Replace
ooÉ ä
(
ooä ã
$str
ooã é
,
ooé è
$str
ooê ì
)
ooì î
;
ooî ï
elsepp 
returnqq 
ClearSymbolsRegexqq $
(qq$ %
)qq% &
.qq& '
Replaceqq' .
(qq. /
valueqq/ 4
,qq4 5
$strqq6 8
)qq8 9
.qq9 :
Replaceqq: A
(qqA B
$strqqB E
,qqE F
$strqqG I
)qqI J
.qqJ K
ReplaceqqK R
(qqR S
$strqqS V
,qqV W
$strqqX Z
)qqZ [
.qq[ \
Replaceqq\ c
(qqc d
$strqqd g
,qqg h
$strqqi k
)qqk l
.qql m
Replaceqqm t
(qqt u
$strqqu x
,qqx y
$strqqz |
)qq| }
.qq} ~
Replace	qq~ Ö
(
qqÖ Ü
$str
qqÜ â
,
qqâ ä
$str
qqã ç
)
qqç é
;
qqé è
}rr 
publiczz 

staticzz 
stringzz "
ClearSpecialCharacterszz /
(zz/ 0
thiszz0 4
stringzz5 ;
valuezz< A
,zzA B
boolzzC G
useSpacezzH P
=zzQ R
falsezzS X
)zzX Y
{{{ !
ArgumentNullException|| 
.|| 
ThrowIfNull|| )
(||) *
value||* /
)||/ 0
;||0 1
if~~ 

(~~ 
value~~ 
.~~ 
Length~~ 
<~~ 
$num~~ 
)~~ 
return 
value 
; 
string
ÅÅ 
result
ÅÅ 
=
ÅÅ 
value
ÅÅ 
.
ÅÅ %
ClearAccentedCharacters
ÅÅ 5
(
ÅÅ5 6
)
ÅÅ6 7
;
ÅÅ7 8
return
ÇÇ 
result
ÇÇ 
.
ÇÇ 
ClearSymbols
ÇÇ "
(
ÇÇ" #
useSpace
ÇÇ# +
)
ÇÇ+ ,
;
ÇÇ, -
}
ÉÉ 
[
ÖÖ 
GeneratedRegex
ÖÖ 
(
ÖÖ 
$str
ÖÖ Z
)
ÖÖZ [
]
ÖÖ[ \
private
ÜÜ 
static
ÜÜ 
partial
ÜÜ 
Regex
ÜÜ  
ClearSymbolsRegex
ÜÜ! 2
(
ÜÜ2 3
)
ÜÜ3 4
;
ÜÜ4 5
public
íí 

static
íí 
byte
íí 
[
íí 
]
íí 
StringToByteArray
íí *
(
íí* +
this
íí+ /
string
íí0 6
value
íí7 <
,
íí< =

TextEncode
íí> H
encode
ííI O
=
ííP Q

TextEncode
ííR \
.
íí\ ]
UTF8
íí] a
)
íía b
{
ìì #
ArgumentNullException
îî 
.
îî 
ThrowIfNull
îî )
(
îî) *
value
îî* /
)
îî/ 0
;
îî0 1
return
ññ 
encode
ññ 
switch
ññ 
{
óó 	

TextEncode
òò 
.
òò 
ASCII
òò 
=>
òò 
Encoding
òò  (
.
òò( )
ASCII
òò) .
.
òò. /
GetBytes
òò/ 7
(
òò7 8
value
òò8 =
)
òò= >
,
òò> ?

TextEncode
ôô 
.
ôô 
UTF8
ôô 
=>
ôô 
Encoding
ôô '
.
ôô' (
UTF8
ôô( ,
.
ôô, -
GetBytes
ôô- 5
(
ôô5 6
value
ôô6 ;
)
ôô; <
,
ôô< =

TextEncode
öö 
.
öö 
UTF16
öö 
=>
öö 
Encoding
öö  (
.
öö( )
BigEndianUnicode
öö) 9
.
öö9 :
GetBytes
öö: B
(
ööB C
value
ööC H
)
ööH I
,
ööI J

TextEncode
õõ 
.
õõ 
UTF32
õõ 
=>
õõ 
Encoding
õõ  (
.
õõ( )
UTF32
õõ) .
.
õõ. /
GetBytes
õõ/ 7
(
õõ7 8
value
õõ8 =
)
õõ= >
,
õõ> ?

TextEncode
úú 
.
úú 
Unicode
úú 
=>
úú !
Encoding
úú" *
.
úú* +
Unicode
úú+ 2
.
úú2 3
GetBytes
úú3 ;
(
úú; <
value
úú< A
)
úúA B
,
úúB C

TextEncode
ùù 
.
ùù 
Latin1
ùù 
=>
ùù  
Encoding
ùù! )
.
ùù) *
Latin1
ùù* 0
.
ùù0 1
GetBytes
ùù1 9
(
ùù9 :
value
ùù: ?
)
ùù? @
,
ùù@ A
_
ûû 
=>
ûû 
Encoding
ûû 
.
ûû 
UTF8
ûû 
.
ûû 
GetBytes
ûû '
(
ûû' (
value
ûû( -
)
ûû- .
,
ûû. /
}
üü 	
;
üü	 

}
†† 
public
®® 

static
®® 
string
®® 
ByteArrayToString
®® *
(
®®* +
this
®®+ /
byte
®®0 4
[
®®4 5
]
®®5 6
value
®®7 <
,
®®< =

TextEncode
®®> H
encode
®®I O
=
®®P Q

TextEncode
®®R \
.
®®\ ]
UTF8
®®] a
)
®®a b
{
©© #
ArgumentNullException
™™ 
.
™™ 
ThrowIfNull
™™ )
(
™™) *
value
™™* /
)
™™/ 0
;
™™0 1
return
¨¨ 
encode
¨¨ 
switch
¨¨ 
{
≠≠ 	

TextEncode
ÆÆ 
.
ÆÆ 
ASCII
ÆÆ 
=>
ÆÆ 
Encoding
ÆÆ  (
.
ÆÆ( )
ASCII
ÆÆ) .
.
ÆÆ. /
	GetString
ÆÆ/ 8
(
ÆÆ8 9
value
ÆÆ9 >
)
ÆÆ> ?
,
ÆÆ? @

TextEncode
ØØ 
.
ØØ 
UTF8
ØØ 
=>
ØØ 
Encoding
ØØ '
.
ØØ' (
UTF8
ØØ( ,
.
ØØ, -
	GetString
ØØ- 6
(
ØØ6 7
value
ØØ7 <
)
ØØ< =
,
ØØ= >

TextEncode
∞∞ 
.
∞∞ 
UTF16
∞∞ 
=>
∞∞ 
Encoding
∞∞  (
.
∞∞( )
BigEndianUnicode
∞∞) 9
.
∞∞9 :
	GetString
∞∞: C
(
∞∞C D
value
∞∞D I
)
∞∞I J
,
∞∞J K

TextEncode
±± 
.
±± 
UTF32
±± 
=>
±± 
Encoding
±±  (
.
±±( )
UTF32
±±) .
.
±±. /
	GetString
±±/ 8
(
±±8 9
value
±±9 >
)
±±> ?
,
±±? @

TextEncode
≤≤ 
.
≤≤ 
Unicode
≤≤ 
=>
≤≤ !
Encoding
≤≤" *
.
≤≤* +
Unicode
≤≤+ 2
.
≤≤2 3
	GetString
≤≤3 <
(
≤≤< =
value
≤≤= B
)
≤≤B C
,
≤≤C D

TextEncode
≥≥ 
.
≥≥ 
Latin1
≥≥ 
=>
≥≥  
Encoding
≥≥! )
.
≥≥) *
Latin1
≥≥* 0
.
≥≥0 1
	GetString
≥≥1 :
(
≥≥: ;
value
≥≥; @
)
≥≥@ A
,
≥≥A B
_
¥¥ 
=>
¥¥ 
Encoding
¥¥ 
.
¥¥ 
UTF8
¥¥ 
.
¥¥ 
	GetString
¥¥ (
(
¥¥( )
value
¥¥) .
)
¥¥. /
,
¥¥/ 0
}
µµ 	
;
µµ	 

}
∂∂ 
}ππ 