{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador do Microsoft (R) Visual C#",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "pt-BR"
      },
      "results": [
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possível atribuição de referência nula.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/SignedEncryptionManager.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 21,
                  "endLine": 30,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "O campo não anulável 'publicKey' precisa conter um valor não nulo ao sair do construtor. Considere declarar o campo como anulável.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/SignedEncryptionManager.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 12,
                  "endLine": 13,
                  "endColumn": 35
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/SignedEncryptionManager.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2094",
          "level": "warning",
          "message": "Remove this empty class, write its code or make it an \"interface\".",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/BrasilAPI/BrasilApiRequest.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/SignedEncryptionManager.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/SignedEncryptionManager.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 37
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/SignedEncryptionManager.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 6,
                  "endLine": 42,
                  "endColumn": 29
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/SignedEncryptionManager.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 17,
                  "endLine": 48,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'SignedEncryptionManager' or mark the type as 'sealed'.",
              "1": "Modify 'SignedEncryptionManager.~SignedEncryptionManager()' so that it calls 'Dispose(false)' and then returns.",
              "2": "'SignedEncryptionManager.Dispose()' should also call 'Dispose(true)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/EncryptionManager.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/EncryptionManager.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/EncryptionManager.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 6,
                  "endLine": 39,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/Security/EncryptionManager.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "endLine": 45,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'EncryptionManager' or mark the type as 'sealed'.",
              "1": "Modify 'EncryptionManager.~EncryptionManager()' so that it calls 'Dispose(false)' and then returns.",
              "2": "'EncryptionManager.Dispose()' should also call 'Dispose(true)'."
            }
          }
        },
        {
          "ruleId": "S3881",
          "level": "warning",
          "message": "Fix this implementation of 'IDisposable' to conform to the dispose pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/EntityFrameworkUtility/RepositoryBase.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/EntityFrameworkUtility/RepositoryBase.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/EntityFrameworkUtility/RepositoryBase.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 6,
                  "endLine": 23,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/EntityFrameworkUtility/RepositoryBase.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 17,
                  "endLine": 29,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Provide 'protected' overridable implementation of 'Dispose(bool)' on 'RepositoryBase' or mark the type as 'sealed'.",
              "1": "Modify 'RepositoryBase.~RepositoryBase()' so that it calls 'Dispose(false)' and then returns.",
              "2": "'RepositoryBase.Dispose()' should also call 'Dispose(true)'."
            }
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///F:/Projetos/Git/SimpleJobs/src/SimpleJobs/SimpleJobs/EntityFrameworkUtility/RepositoryBase.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 41,
                  "endLine": 14,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS8601": {
          "id": "CS8601",
          "shortDescription": "Possível atribuição de referência nula.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8601)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "O campo não anulável precisa conter um valor não nulo ao sair do construtor. Considere declará-lo como anulável.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S2094": {
          "id": "S2094",
          "shortDescription": "Classes should not be empty",
          "fullDescription": "There is no good excuse for an empty class. If it’s being used simply as a common extension point, it should be replaced with an interface. If it was stubbed in as a placeholder for future development it should be fleshed-out. In any other case, it should be eliminated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2094",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3604": {
          "id": "S3604",
          "shortDescription": "Member initializer values should not be redundant",
          "fullDescription": "Fields, properties and events can be initialized either inline or in the constructor. Initializing them inline and in the constructor at the same time is redundant; the inline initialization will be overridden.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3604",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3881": {
          "id": "S3881",
          "shortDescription": "\"IDisposable\" should be implemented correctly",
          "fullDescription": "The IDisposable interface is a mechanism to release unmanaged resources, if not implemented correctly this could result in resource leaks or more severe bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3881",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}